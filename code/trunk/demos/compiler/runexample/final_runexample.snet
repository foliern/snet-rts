//! snet final

/*****************************************************************
 *
 * Final run-example source file from SNet compiler's implementation guide. 
 * Just for testing code generation of compiler.
 *
 * Author: Kari Keinanen, VTT Technical Research Centre of Finland
 *
 * Date:   21.02.2007
 * 
 * Run:
 * 
 *     Code generation:
 *
 *         $ snetc -c final_runexample.snet
 *
 *         or specifying command line include directories
 *
 *         $ snetc -b2 final_runexample.snet -Iincdir1 -Iincdir2
 *
 *         or specifying include directories with environment variable
 *
 *         $ export CPATH=incdir1:incdir2; snetc -b2 final_runexample.snet
 * 
 *         Example:
 *
 *         $ snetc -c final_runexample.snet -I../../../include/
 *
 *     Linking:
 *
 *         $ snetc final_runexample.snet
 * 
 *         or specifying command line library directories
 *
 *         $ snetc final_runexample.snet -Llibdir1 -Llibdir2
 *
 *         or specifying library directories with environment variable
 *
 *         $ export LIBRARY_PATH=libdir1:libdir2; snetc final_runexample.snet
 *
 *         Example:
 *
 *         $ snetc final_runexample.snet -I../../../include/ -L../../../lib
 *     
 ****************************************************************/

net tag::tag ({tag::A,tag::B} -> {tag::A,tag::B,<tag::T>});

net tag__translate_in ({A,B} -> {tag::A,tag::B})
connect [(A,B) -> (tag::A,tag::B)];

net tag__translate_out ({tag::A,tag::B,<tag::T>} -> {A,B,<T>})
connect [(tag::A,tag::B,<tag::T>) -> (A,B,<T>)];

net tag__tag ({tag::A,tag::B} -> {tag::A,tag::B,<tag::T>})
connect tag::tag;

net tag__in ({A,B} -> {tag::A,tag::B,<tag::T>})
connect tag__translate_in .. tag__tag;

net tag ({A,B} -> {A,B,<T>})
connect tag__in .. tag__translate_out;

box compABC__compA compA ((A) -> (P));
box compABC__compB compB ((B) -> (Q));
box compABC__compC compC ((C) -> (P));

net compABC___PL ({A} -> {P})
connect compABC__compA;

net compABC___PR__PL ({B} -> {Q})
connect compABC__compB;

net compABC___PR__PR ({C} -> {P})
connect compABC__compC;

net compABC ({A} -> {P}, {B} -> {Q}, {C} -> {P})
connect || compABC___PL compABC___PR__PL compABC___PR__PR;

net final_runexample__split ({A,B,<T>} -> {A,<T>} | {B,<T>})
connect [{A,B,<T>} -> {A,<T>}; {B,<T>}];

box final_runexample__examine examine ((P,Q) -> (A,B) | (Y,Z));

box final_runexample__compute__compAB__compABC__compA compA ((A) -> (P));
box final_runexample__compute__compAB__compABC__compB compB ((B) -> (Q));

net final_runexample__compute__compAB__compABC___SL ({A} -> {P})
connect final_runexample__compute__compAB__compABC__compA;

net final_runexample__compute__compAB__compABC___SR__SL ({B} -> {Q})
connect final_runexample__compute__compAB__compABC__compB;

net final_runexample__compute__compAB__compABC ({A} -> {P}, {B} -> {Q})
connect final_runexample__compute__compAB__compABC___SL || final_runexample__compute__compAB__compABC___SR__SL;

net final_runexample__compute__compAB ({A} -> {P}, {B} -> {Q})
connect final_runexample__compute__compAB__compABC;

net final_runexample__compute__syncPQ___ST ({P} -> {P} | {P,Q}, {Q} -> {Q} | {P,Q})
connect [|{P},{Q}|];

net final_runexample__compute__syncPQ ({P} -> {P,Q}, {Q} -> {P,Q})
connect final_runexample__compute__syncPQ___ST ** {P,Q};

net final_runexample__compute___IS___SL ({<T>} -> {})
connect [{<T>} -> {}];

net final_runexample__compute___IS___SR ({A} -> {P,Q}, {B} -> {P,Q})
connect final_runexample__compute__compAB .. final_runexample__compute__syncPQ;

net final_runexample__compute___IS ({A,<T>} -> {P,Q}, {B,<T>} -> {P,Q})
connect final_runexample__compute___IS___SL .. final_runexample__compute___IS___SR;

net final_runexample__compute ({A,<T>} -> {P,Q}, {B,<T>} -> {P,Q})
connect final_runexample__compute___IS !! <T>;

net final_runexample___ST___SR___SR___SR ({P,Q} -> {A,B} | {Y,Z})
connect final_runexample__examine;

net final_runexample___ST___SR___SR ({A,<T>} -> {A,B} | {Y,Z}, {B,<T>} -> {A,B} | {Y,Z})
connect final_runexample__compute .. final_runexample___ST___SR___SR___SR;

net final_runexample___ST___SR ({A,B,<T>} -> {A,B} | {Y,Z})
connect final_runexample__split .. final_runexample___ST___SR___SR;

net final_runexample___ST ({A,B} -> {A,B} | {Y,Z})
connect tag .. final_runexample___ST___SR;

net final_runexample ({A,B} -> {Y,Z})
connect final_runexample___ST ** {Y,Z};
