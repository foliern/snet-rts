net factorial
{
        box leq1( (x) -> (x,p));
        box condif( (p) -> (<T>) | (<F>));

        net compute
        {
                box sub( (x) -> (xx));
                box mult( (x,r) -> (rr, xx));
        }
        connect [{<F>,x,r} -> {x=x,r=r}; {x=x}] .. 
					(sub|(mult..[{xx} -> {}])) .. 
					  ([|{xx},{rr} |]*{xx,rr}) ..
					    [{xx,rr}->{x=xx,r=rr}];

}
connect (leq1 .. condif .. ([{<T>} -> {<stop>}] | compute))*{<stop>};



