
#
# $Id$
#
#


###############################################################################
#
# Calling conventions:
#
#  Start rules: 
#    default    compile default code (subproject dependent)
#    devel      compile developer code 
#    prod       compile product code
#    efence     compile efence debugging code
#    clean      cleanup derived files
#    cleandevel cleanup compiled files (developer code only)
#    cleanprod  cleanup compiled files (product code only)
#
#  Parameters:
#    DEPS="no"  de-activate dependency checking meachanism
#    HIDE=""    show important commands issued by make (debugging)
#
###############################################################################


#######################################################################################
#
# general setup:
#

PROJECT_ROOT := ../..

REVISION := $(shell svn info | grep Revision: | sed -e 's/Revision: //g')

HIDE := @
DEPS := yes

include $(PROJECT_ROOT)/src/makefiles/config.mkf
include $(PROJECT_ROOT)/src/makefiles/targets.mkf

SUBPROJECT       := $(notdir $(CURDIR))
SUBPROJECT_DIRS  := $($(SUBPROJECT))

targetdir        := $(targetdir_$(SUBPROJECT))

targets_devel    := $(addprefix $(targetdir)/,$(targets_$(SUBPROJECT)_devel))
targets_prod     := $(addprefix $(targetdir)/,$(targets_$(SUBPROJECT)_prod))
targets_efence   := $(addprefix $(targetdir)/,$(targets_$(SUBPROJECT)_efence))
targets_default  := $(addprefix $(targetdir)/,$(targets_$(SUBPROJECT)_default))

clean_also       := $(addprefix $(targetdir)/,$(clean_$(SUBPROJECT)))
clean_also_devel := $(addprefix $(targetdir)/,$(clean_$(SUBPROJECT)_devel))
clean_also_prod  := $(addprefix $(targetdir)/,$(clean_$(SUBPROJECT)_prod))


###############################################################################
#
# Dummy rules
#

.PHONY: clean clean_dirs %.clean 
.PHONY: cleanprod cleanprod_dirs %.cleanprod 
.PHONY: cleandevel cleandevel_dirs %.cleandevel
.PHONY: default devel prod efence make_%


###############################################################################
#
# Start rules
#

default: make_default

devel: make_devel

prod: make_prod

efence: make_efence


###############################################################################
#
# Main rule
#

make_%: 
	@ if [ "$(OS)" = "" -o "$(ARCH)" = "" ]; \
	  then $(ECHO) "*** Unknown OS or unknown ARCH! Please specify!"; \
	       exit 1; \
	  fi
	@$(ECHO) ""
	@$(ECHO) "************************************************************"
	@$(ECHO) "* Building S-Net $(SUBPROJECT) "
	@$(ECHO) "* revision $(REVISION)"
	@$(ECHO) "* on $(OS) for $(ARCH)"
	@$(ECHO) "************************************************************"
	@touch .make_track
	$(HIDE) $(MAKE) -f $(PROJECT_ROOT)/src/makefiles/core.mkf \
                         DEPS="$(DEPS)" HIDE="$(HIDE)" \
                         TARGETDIR="$(SUBPROJECT_DIRS)" \
                         TARGETS="$(targets_$*)" 





###############################################################################
#
# Rules for cleaning directories
#

clean: 
	@$(ECHO) ""
	@$(ECHO) "************************************************************"
	@$(ECHO) "* Cleaning S-Net $(SUBPROJECT)"
	@$(ECHO) "************************************************************"
	@$(ECHO) "Cleaning directory $(targetdir)"
	$(HIDE) $(RM) $(targets_devel) $(targets_prod) $(clean_also)
	@$(MAKE) HIDE="$(HIDE)" clean_dirs

clean_dirs: $(addsuffix .clean,$(SUBPROJECT_DIRS))

%.clean:
	@$(ECHO) "Cleaning directory $*"
	$(HIDE) $(MAKE) -C $* HIDE="$(HIDE)" clean


cleanprod: 
	@$(ECHO) ""
	@$(ECHO) "************************************************************"
	@$(ECHO) "* Cleaning S-Net $(SUBPROJECT)  (product code only)"
	@$(ECHO) "************************************************************"
	@$(ECHO) "Cleaning directory $(targetdir)"
	$(HIDE) $(RM) $(targets_prod) $(clean_also_prod)
	@$(MAKE) HIDE="$(HIDE)" cleanprod_dirs

cleanprod_dirs: $(addsuffix .cleanprod,$(SUBPROJECT_DIRS))

%.cleanprod:
	@$(ECHO) "Cleaning directory $*"
	$(HIDE) $(MAKE) -C $* HIDE="$(HIDE)" cleanprod


cleandevel: 
	@$(ECHO) ""
	@$(ECHO) "************************************************************"
	@$(ECHO) "* Cleaning S-Net $(SUBPROJECT)  (developer code only)"
	@$(ECHO) "************************************************************"
	@$(ECHO) "Cleaning directory $(targetdir)"
	$(HIDE) $(RM) $(targets_devel) $(clean_also_devel)
	@$(MAKE) HIDE="$(HIDE)" cleandevel_dirs

cleandevel_dirs: $(addsuffix .cleandevel,$(SUBPROJECT_DIRS))

%.cleandevel:
	@$(ECHO) "Cleaning directory $*"
	$(HIDE) $(MAKE) -C $* HIDE="$(HIDE)" cleandevel






oldclean: $(addsuffix .clean,$(SUBPROJECT_DIRS))
	$(RM) snetc
	$(RM) snetc.prod
	$(RM) snetc.efence
	$(RM) -r .sb SunWS_cache
	$(RM) global/build.c

