#
# $Id$
#
#


###############################################################################
#
# Collection of targets
#

targets_commonlib_devel   := libcommon.a
targets_commonlib_prod    := libcommon.prod.a
targets_commonlib_default := $(targets_commonlib_devel)

targets_maketools_devel   := cse.devel cb.devel
targets_maketools_prod    := cse cb
targets_maketools_default := $(targets_maketools_prod)

targets_compiler_devel    := snetc
targets_compiler_prod     := snetc.prod
targets_compiler_efence   := snetc.efence
targets_compiler_default  := $(targets_compiler_devel)

targets_runtime_devel     := libsnet.a 
targets_runtime_prod      := libsnet.prod.a 
targets_runtime_default   := $(targets_runtime_devel)

targets_util_devel     	  := libsnetutil.so
targets_util_prod      	  := libsnetutil.prod.so 
targets_util_default   	  := $(targets_util_devel)

#targets_tools_devel       := FeederFront.devel RecordInspector.devel
#targets_tools_prod        := FeederFront RecordInspector
#targets_tools_default     := $(targets_tools_devel)

#targets_demo_devel        := factorial.devel graphicFactorial.devel
#targets_demo_prod         := factorial graphicFactorial
#targets_demo_default      := $(targets_demo_devel)


###############################################################################
#
# Collection of target directories
#

targetdir_commonlib       := src/lib
targetdir_maketools       := src/bin
targetdir_compiler        := bin
targetdir_runtime         := lib
targetdir_util	          := lib
targetdir_tools           := bin
#targetdir_demo            := bin


###############################################################################
#
# Collection of additional files to be cleaned
#

clean_commonlib           := 
clean_commonlib_devel     := 
clean_commonlib_prod      := 

clean_maketools           := 
clean_maketools_devel     := 
clean_maketools_prod      := 

clean_compiler            := snetc.efence \
                             ../src/compiler/global/build.c \
                             ../src/compiler/global/build_prod.c

clean_compiler_devel      := snetc.efence \
                             ../src/compiler/global/build.c

clean_compiler_prod       := ../src/compiler/global/build_prod.c

clean_runtime             :=
clean_runtime_devel       :=
clean_runtime_prod        :=

clean_util             	  :=
clean_util_devel       	  :=
clean_util_prod		  :=

#clean_tools               :=
#clean_tools_devel         :=
#clean_tools_prod          :=

clean_demo                :=
clean_demo_devel          :=
clean_demo_prod           :=


###############################################################################
#
# Collection of source directories
#

commonlib       = dbug getoptions

maketools       = cse cb

compiler        = tree global support parse preproc flat typeinf opt postproc \
                  codegen invokecc print

runtime         = common entities netinterface observer utility threading interfacing distribution

util		= core metadata

#tools           = RecordInspector FeederFront 

demo            = factorial graphicFactorial


###############################################################################
#
# Collection of commonlib object files
#
# Note that the variable names must coincide with the directory names above.
#

dbug            = dbug.o

getoptions      = getoptions.o


###############################################################################
#
# Collection of make tool object files
#
# Note that the variable names must coincide with the directory names above.
#

cse             = cse.o

cb              = cb.o


###############################################################################
#
# Collection of compiler object files
#
# Note that the variable names must coincide with the directory names above.
#

global          = main.o config_file.o init.o usage.o memory.o lookup_table.o \
                  globals.o options.o ctinfo.o phase.o phase_drivers.o set.o

support         = buffer.o str.o system.o maths.o

tree            = check.o check_attribs.o check_lib.o check_mem.o \
                  check_node.o checktst.o free.o free_attribs.o free_node.o \
                  node_basic.o traverse.o traverse_helper.o traverse_tables.o \
                  tree_basic.o tree_compound.o copy.o copy_attribs.o copy_node.o \

parse           = snet.tab.o snet.lex.o scanparse.o cpreproc.o mdinterp.o \
		  mdcol.o mdns.o mdaux.o sploc.o

preproc         = dcr.o tcheck.o boxex.o boxexfile.o mod.o tres.o

flat            = flat.o

typeinf         = typing.o typeinf.o

opt             = 

postproc        = ptypcln.o ptran.o ploc.o netren.o netflat.o

codegen         = codegen.o codefile.o cchoice.o cexpr.o cfilt.o cserial.o \
		  cshield.o csplit.o cstar.o csync.o ctext.o ctrans.o cwrap.o \
		  cvar.o cgenwrap.o cfun.o

invokecc        = invokecc.o

print           = print.o 


###############################################################################
#
# Collection of runtime object files
#
# Note that the variable names must coincide with the directory names above.
#

common          = handle.o record.o expression.o

entities        = filter.o graphics.o\
                  syncro.o out.o box.o alias.o\
                  serial.o collectors.o parallel.o star.o split.o

utility		= list.o debug.o stack.o tree.o bitmap.o hashtable.o queue.o

threading       = threading.o extended_semaphore.o stream_layer.o buffer.o\
                  feedbackbuffer.o ubuffer.o

interfacing     = interface_functions.o

netinterface	= label.o output.o parser.tab.o parser.lex.o interface.o\
                  networkinterface.o

observer	= observers.o

distribution    = distribution.o datastorage.o message.o fun.o imanager.o \
                  id.o omanager.o routing.o reference.o 

###############################################################################
#
# Collection of util object files
#
# Note that the variable names must coincide with the directory names above.
#

core		= memfun.o typeencode.o 

metadata	= metadata.o

###############################################################################
#
# Collection of tool object files
#
# Note that the variable names must coincide with the directory names above.
#

FeederFront        = FeederFront.o 
RecordInspector	   = RecordInspector.o


###############################################################################
#
# Collection of demo object files
#
# Note that the variable names must coincide with the directory names above.
#

#factorial       = boxfun.o main.o factorial.o

#graphicFactorial = boxfun.o main.o graphicFactorial.o


