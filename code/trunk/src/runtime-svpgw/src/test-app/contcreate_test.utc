#include "snet-gwrt.utc.h"

/*---*/

#include <stdio.h>
#include <stdlib.h>
#include <assert.h>
#include <unistd.h>

/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/

static thread void cont_created_fam(
    unsigned int idx, unsigned int delay)
{
    unsigned int idx_local = idx;

    usleep(delay);
    printf("Family %u\n", idx_local);
}

static thread void cont_created_fam0(
    unsigned int idx, unsigned int delay)
{
    family fid;

    unsigned int i;
    unsigned int famid;

    usleep(delay);

    for (i=0; i < idx + 1; i++) {
        famid = 10000 * idx + i;

        create<nosync> 
            (fid; ; 0; 0; 1; 1;;) 
                cont_created_fam(famid, 1000);

        printf("Created family %u\n", famid);
    }
}

/*----------------------------------------------------------------------------*/

static void cont_create_test(unsigned int fam_cnt)
{
    family fid;
    unsigned int i;

    for (i=0; i < fam_cnt; i++) {
        create<nosync> 
            (fid; ; 0; 0; 1; 1;;) 
                cont_created_fam(i, 1000);

        printf("Created family %u\n", i);
    
        usleep(2000);
    }
}

static thread void cont_create_test_th(unsigned int fam_cnt)
{
    family fid;
    unsigned int i;

    for (i=0; i < fam_cnt; i++) {
        create<root, nosync> 
            (fid; ; 0; 0; 1; 1;;) 
                cont_created_fam0(i, 1000);

        printf("Created family %u\n", i);
    }
}

/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/

void contcreate_test()
{
    family fid;
    int test_sz = 1000;

    cont_create_test(test_sz);

    //create (fid; ; 0; 0; 1; 1;;) cont_create_test_th(test_sz);
    create<root> (fid; ; 0; 0; 1; 1;;) cont_create_test_th(test_sz);

    usleep(500);

    kill(fid);
    sync(fid);

    printf("Test family synced\n");
}

/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/

