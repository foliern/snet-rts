#include "sep.utc.h"
#include "tsane.utc.h"
#include "snetgw.int.utc.h"

/*---*/

#include <stdio.h>
#include <stdlib.h>

/*----------------------------------------------------------------------------*/

const char *FUNC_NAMES[] = {
    "foo"
};

/*---*/

#define FUNC_FOO_ID 0


/*---*/

#define FUNC_NAME(id) (char *) FUNC_NAMES[id]

/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/

thread void foo(int a, int b)
{ 
    int la = a;
    int lb = b;

    printf("FOO<local>(a=%d, b=%d)\n", la, lb);
}

/*----------------------------------------------------------------------------*/

void remote_create_test()
{
    SEP_init();

    family fid;
    place  plc;

    sep_req_t plc_request = {
        FUNC_NAME(FUNC_FOO_ID),
        1
    };

    create (fid; SEP_PLACE; 0; 0; 1; 1;;) 
        SEP_request_place(plc_request, plc, true);

    sync(fid);

    int a = 100;
    int b = 200;

    create (fid;; 0; 0; 1; 1;;) foo(a, b);
    sync(fid);

    create (fid; plc; 0; 0; 1; 1;;) foo(a, b);
    sync(fid);

    handle_t hnd = {
        a,
        b
    };

    printf("HND(a=%d, b=%d)\n", hnd.a, hnd.b);

    create (fid; plc; 0; 0; 1; 1;;) bar(&hnd);
    sync(fid);

    printf("HND(a=%d, b=%d)\n", hnd.a, hnd.b);

    void       *ptr = NULL;
    uint32_t    sz  = 0;
    snet_ref_t  ref = NULL_REF;
    
    create (fid; plc; 0; 0; 1; 1;;) copy_data(ref, ptr, sz);
    sync(fid);

    if (ptr == NULL) {
        printf("PTR == NULL\n");

    } else {
        printf("StrLen = %u\n", (unsigned int)(sz));
        printf("-----------------------------------\n");
        printf("%s", (const char *)(ptr));

        SNetMemFree(ptr);
    }

    create (fid; SEP_PLACE; 0; 0; 1; 1;;) SEP_release_place(plc);
    sync(fid);

    SEP_end();
}

/*----------------------------------------------------------------------------*/
/*----------------------------------------------------------------------------*/

